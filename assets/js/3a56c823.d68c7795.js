"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[890],{8312:function(e,n,r){r.r(n),r.d(n,{assets:function(){return k},contentTitle:function(){return v},default:function(){return w},frontMatter:function(){return h},metadata:function(){return b},toc:function(){return x}});var t=r(7462),i=r(3366),c=r(7294),a=r(3905),l=r(2805),o=r(859),s=r(9583),d=r(148),m=(0,d.fK)({name:"",children:[{name:"src",children:[{name:"index.js"},{name:"styles.css"}]},{name:"node_modules",children:[{name:"react-accessible-treeview",children:[{name:"index.js"}]},{name:"react",children:[{name:"index.js"}]}]},{name:".npmignore"},{name:"package.json"},{name:"webpack.config.js"}]});var u=function(e){return e.isOpen?c.createElement(s.zuo,{color:"e8a87c",className:"icon"}):c.createElement(s.IEK,{color:"e8a87c",className:"icon"})},p=function(e){var n=e.filename;switch(n.slice(n.lastIndexOf(".")+1)){case"js":return c.createElement(o.Fi5,{color:"yellow",className:"icon"});case"css":return c.createElement(o.BA4,{color:"turquoise",className:"icon"});case"json":return c.createElement(s.AeW,{color:"yellow",className:"icon"});case"npmignore":return c.createElement(o.I_N,{color:"red",className:"icon"});default:return null}},f=function(){return c.createElement("div",null,c.createElement("div",{className:"ide"},c.createElement(d.ZP,{data:m,"aria-label":"directory tree",togglableSelect:!0,clickAction:"EXCLUSIVE_SELECT",multiSelect:!0,nodeRenderer:function(e){var n=e.element,r=e.isBranch,i=e.isExpanded,a=e.getNodeProps,l=e.level;e.handleSelect;return c.createElement("div",(0,t.Z)({},a(),{style:{paddingLeft:20*(l-1)}}),r?c.createElement(u,{isOpen:i}):c.createElement(p,{filename:n.name}),n.name)}})))},g=["components"],h={title:"Directory tree (multiple selection)"},v=void 0,b={unversionedId:"examples-MultiSelectDirectoryTree",id:"examples-MultiSelectDirectoryTree",title:"Directory tree (multiple selection)",description:"This example combines multiselect and an exclusive select onClick. It supports multiselect using various commands, such as Ctrl+click Shift+Click, Enter/Space and Shift + Up/Down.",source:"@site/docs/examples-MultiSelectDirectoryTree.md",sourceDirName:".",slug:"/examples-MultiSelectDirectoryTree",permalink:"/react-accessible-treeview/docs/examples-MultiSelectDirectoryTree",draft:!1,tags:[],version:"current",frontMatter:{title:"Directory tree (multiple selection)"},sidebar:"docs",previous:{title:"Directory tree (single selection)",permalink:"/react-accessible-treeview/docs/examples-DirectoryTree"},next:{title:"Checkbox",permalink:"/react-accessible-treeview/docs/examples-MultiSelectCheckbox"}},k={},x=[],y={toc:x};function w(e){var n=e.components,r=(0,i.Z)(e,g);return(0,a.kt)("wrapper",(0,t.Z)({},y,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This example combines multiselect and an exclusive select onClick. It supports multiselect using various commands, such as ",(0,a.kt)("inlineCode",{parentName:"p"},"Ctrl+click")," ",(0,a.kt)("inlineCode",{parentName:"p"},"Shift+Click"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"Enter/Space")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"Shift + Up/Down"),"."),(0,a.kt)(l.Z,{component:f,js:'import React from "react";\r\nimport { DiCss3, DiJavascript, DiNpm } from "react-icons/di";\r\nimport { FaList, FaRegFolder, FaRegFolderOpen } from "react-icons/fa";\r\nimport TreeView, { flattenTree } from "react-accessible-treeview";\r\nimport "./styles.css";\r\n\r\nconst folder = {\r\n  name: "",\r\n  children: [\r\n    {\r\n      name: "src",\r\n      children: [{ name: "index.js" }, { name: "styles.css" }],\r\n    },\r\n    {\r\n      name: "node_modules",\r\n      children: [\r\n        {\r\n          name: "react-accessible-treeview",\r\n          children: [{ name: "index.js" }],\r\n        },\r\n        { name: "react", children: [{ name: "index.js" }] },\r\n      ],\r\n    },\r\n    {\r\n      name: ".npmignore",\r\n    },\r\n    {\r\n      name: "package.json",\r\n    },\r\n    {\r\n      name: "webpack.config.js",\r\n    },\r\n  ],\r\n};\r\n\r\nconst data = flattenTree(folder);\r\nfunction MultiSelectDirectoryTreeView() {\r\n  return (\r\n    <div>\r\n      <div className="ide">\r\n        <TreeView\r\n          data={data}\r\n          aria-label="directory tree"\r\n          togglableSelect\r\n          clickAction="EXCLUSIVE_SELECT"\r\n          multiSelect\r\n          nodeRenderer={({\r\n            element,\r\n            isBranch,\r\n            isExpanded,\r\n            getNodeProps,\r\n            level,\r\n            handleSelect,\r\n          }) => (\r\n            <div {...getNodeProps()} style={{ paddingLeft: 20 * (level - 1) }}>\r\n              {isBranch ? (\r\n                <FolderIcon isOpen={isExpanded} />\r\n              ) : (\r\n                <FileIcon filename={element.name} />\r\n              )}\r\n              {element.name}\r\n            </div>\r\n          )}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst FolderIcon = ({ isOpen }) =>\r\n  isOpen ? (\r\n    <FaRegFolderOpen color="e8a87c" className="icon" />\r\n  ) : (\r\n    <FaRegFolder color="e8a87c" className="icon" />\r\n  );\r\n\r\nconst FileIcon = ({ filename }) => {\r\n  const extension = filename.slice(filename.lastIndexOf(".") + 1);\r\n  switch (extension) {\r\n    case "js":\r\n      return <DiJavascript color="yellow" className="icon" />;\r\n    case "css":\r\n      return <DiCss3 color="turquoise" className="icon" />;\r\n    case "json":\r\n      return <FaList color="yellow" className="icon" />;\r\n    case "npmignore":\r\n      return <DiNpm color="red" className="icon" />;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\nexport default MultiSelectDirectoryTreeView;\r\n',css:".ide {\r\n  background: #242322;\r\n  font-family: monospace;\r\n  font-size: 16px;\r\n  color: white;\r\n  user-select: none;\r\n  padding: 20px;\r\n  border-radius: 0.4em;\r\n}\r\n\r\n.ide .tree,\r\n.ide .tree-node,\r\n.ide .tree-node-group {\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.ide .tree-branch-wrapper,\r\n.ide .tree-node__leaf {\r\n  outline: none;\r\n  outline: none;\r\n}\r\n\r\n.ide .tree-node {\r\n  cursor: pointer;\r\n}\r\n\r\n.ide .tree-node:hover {\r\n  background: rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.ide .tree .tree-node--focused {\r\n  background: rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.ide .tree .tree-node--selected {\r\n  background: rgba(48, 107, 176);\r\n}\r\n\r\n.ide .tree-node__branch {\r\n  display: block;\r\n}\r\n\r\n.ide .icon {\r\n  vertical-align: middle;\r\n  margin-right: 5px;\r\n}\r\n",mdxType:"CodeTabs"}))}w.isMDXComponent=!0}}]);
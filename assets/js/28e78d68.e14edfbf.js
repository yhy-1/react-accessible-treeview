"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[507],{842:function(e,n,r){var a=r(3366),t=r(7462),c=r(7294),o=r(9583),s=r(1649),l=r(148),i=r(4184),m=r.n(i),d=["variant"],u=(0,l.fK)({name:"",children:[{name:"Fruits",children:[{name:"Avocados"},{name:"Bananas"},{name:"Berries"},{name:"Oranges"},{name:"Pears"}]},{name:"Drinks",children:[{name:"Apple Juice"},{name:"Chocolate"},{name:"Coffee"},{name:"Tea",children:[{name:"Black Tea"},{name:"Green Tea"},{name:"Red Tea"},{name:"Matcha"}]}]},{name:"Vegetables",children:[{name:"Beets"},{name:"Carrots"},{name:"Celery"},{name:"Lettuce"},{name:"Onions"}]}]});var p=function(e){var n,r,a=e.isOpen,t=e.className,o="arrow",l=m()(o,((n={})["arrow--closed"]=!a,n),((r={})["arrow--open"]=a,r),t);return c.createElement(s.am,{className:l})},h=function(e){var n=e.variant,r=(0,a.Z)(e,d);switch(n){case"all":return c.createElement(o.xik,r);case"none":return c.createElement(o.u9M,r);case"some":return c.createElement(o.kty,r);default:return null}};n.Z=function(){return c.createElement("div",null,c.createElement("div",{className:"checkbox"},c.createElement(l.ZP,{data:u,"aria-label":"Checkbox tree",multiSelect:!0,propagateSelect:!0,propagateSelectUpwards:!0,togglableSelect:!0,nodeRenderer:function(e){var n=e.element,r=e.isBranch,a=e.isExpanded,o=e.isSelected,s=e.isHalfSelected,l=e.getNodeProps,i=e.level,m=e.handleSelect,d=e.handleExpand;return c.createElement("div",(0,t.Z)({},l({onClick:d}),{style:{marginLeft:40*(i-1)}}),r&&c.createElement(p,{isOpen:a}),c.createElement(h,{className:"checkbox-icon",onClick:function(e){m(e),e.stopPropagation()},variant:s?"some":o?"all":"none"}),c.createElement("span",{className:"name"},n.name))}})))}},2986:function(e,n,r){r.r(n),r.d(n,{assets:function(){return p},contentTitle:function(){return d},default:function(){return b},frontMatter:function(){return m},metadata:function(){return u},toc:function(){return h}});var a=r(7462),t=r(3366),c=(r(7294),r(3905)),o=r(2805),s=r(842),l=r(1240),i=["components"],m={title:"Checkbox"},d=void 0,u={unversionedId:"examples-MultiSelectCheckbox",id:"examples-MultiSelectCheckbox",title:"Checkbox",description:"This example demonstrates how to create a checkbox tree",source:"@site/docs/examples-MultiSelectCheckbox.mdx",sourceDirName:".",slug:"/examples-MultiSelectCheckbox",permalink:"/docs/examples-MultiSelectCheckbox",draft:!1,tags:[],version:"current",frontMatter:{title:"Checkbox"},sidebar:"docs",previous:{title:"Directory tree (multiple selection)",permalink:"/docs/examples-MultiSelectDirectoryTree"},next:{title:"Checkbox with disabled nodes",permalink:"/docs/examples-MultiSelectCheckboxDisabled"}},p={},h=[],x={toc:h};function b(e){var n=e.components,r=(0,t.Z)(e,i);return(0,c.kt)("wrapper",(0,a.Z)({},x,r,{components:n,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"This example demonstrates how to create a checkbox tree"),(0,c.kt)(o.Z,{component:s.Z,js:'import React from "react";\r\nimport { FaSquare, FaCheckSquare, FaMinusSquare } from "react-icons/fa";\r\nimport { IoMdArrowDropright } from "react-icons/io";\r\nimport TreeView, { flattenTree } from "react-accessible-treeview";\r\nimport cx from "classnames";\r\nimport "./styles.css";\r\n\r\nconst folder = {\r\n  name: "",\r\n  children: [\r\n    {\r\n      name: "Fruits",\r\n      children: [\r\n        { name: "Avocados" },\r\n        { name: "Bananas" },\r\n        { name: "Berries" },\r\n        { name: "Oranges" },\r\n        { name: "Pears" },\r\n      ],\r\n    },\r\n    {\r\n      name: "Drinks",\r\n      children: [\r\n        { name: "Apple Juice" },\r\n        { name: "Chocolate" },\r\n        { name: "Coffee" },\r\n        {\r\n          name: "Tea",\r\n          children: [\r\n            { name: "Black Tea" },\r\n            { name: "Green Tea" },\r\n            { name: "Red Tea" },\r\n            { name: "Matcha" },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: "Vegetables",\r\n      children: [\r\n        { name: "Beets" },\r\n        { name: "Carrots" },\r\n        { name: "Celery" },\r\n        { name: "Lettuce" },\r\n        { name: "Onions" },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nconst data = flattenTree(folder);\r\n\r\nfunction MultiSelectCheckbox() {\r\n  return (\r\n    <div>\r\n      <div className="checkbox">\r\n        <TreeView\r\n          data={data}\r\n          aria-label="Checkbox tree"\r\n          multiSelect\r\n          propagateSelect\r\n          propagateSelectUpwards\r\n          togglableSelect\r\n          nodeRenderer={({\r\n            element,\r\n            isBranch,\r\n            isExpanded,\r\n            isSelected,\r\n            isHalfSelected,\r\n            getNodeProps,\r\n            level,\r\n            handleSelect,\r\n            handleExpand,\r\n          }) => {\r\n            return (\r\n              <div\r\n                {...getNodeProps({ onClick: handleExpand })}\r\n                style={{ marginLeft: 40 * (level - 1) }}\r\n              >\r\n                {isBranch && <ArrowIcon isOpen={isExpanded} />}\r\n                <CheckBoxIcon\r\n                  className="checkbox-icon"\r\n                  onClick={(e) => {\r\n                    handleSelect(e);\r\n                    e.stopPropagation();\r\n                  }}\r\n                  variant={\r\n                    isHalfSelected ? "some" : isSelected ? "all" : "none"\r\n                  }\r\n                />\r\n                <span className="name">{element.name}</span>\r\n              </div>\r\n            );\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ArrowIcon = ({ isOpen, className }) => {\r\n  const baseClass = "arrow";\r\n  const classes = cx(\r\n    baseClass,\r\n    { [`${baseClass}--closed`]: !isOpen },\r\n    { [`${baseClass}--open`]: isOpen },\r\n    className\r\n  );\r\n  return <IoMdArrowDropright className={classes} />;\r\n};\r\n\r\nconst CheckBoxIcon = ({ variant, ...rest }) => {\r\n  switch (variant) {\r\n    case "all":\r\n      return <FaCheckSquare {...rest} />;\r\n    case "none":\r\n      return <FaSquare {...rest} />;\r\n    case "some":\r\n      return <FaMinusSquare {...rest} />;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport default MultiSelectCheckbox;\r\n',css:l.Z,mdxType:"CodeTabs"}))}b.isMDXComponent=!0},1240:function(e,n){n.Z=".checkbox {\r\n  font-size: 16px;\r\n  user-select: none;\r\n  min-height: 320px;\r\n  padding: 20px;\r\n  box-sizing: content-box;\r\n}\r\n\r\n.checkbox .tree,\r\n.checkbox .tree-node,\r\n.checkbox .tree-node-group {\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.checkbox .tree-branch-wrapper,\r\n.checkbox .tree-node__leaf {\r\n  outline: none;\r\n}\r\n\r\n.checkbox .tree-node {\r\n  cursor: pointer;\r\n}\r\n\r\n.checkbox .tree-node .name:hover {\r\n  background: rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.checkbox .tree-node--focused .name {\r\n  background: rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.checkbox .tree-node {\r\n  display: inline-block;\r\n}\r\n\r\n.checkbox .checkbox-icon {\r\n  margin: 0 5px;\r\n  vertical-align: middle;\r\n}\r\n\r\n.checkbox button {\r\n  border: none;\r\n  background: transparent;\r\n  cursor: pointer;\r\n}\r\n\r\n.checkbox .arrow {\r\n  margin-left: 5px;\r\n  vertical-align: middle;\r\n}\r\n\r\n.checkbox .arrow--open {\r\n  transform: rotate(90deg);\r\n}\r\n"}}]);